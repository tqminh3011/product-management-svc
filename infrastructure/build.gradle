plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyMgtVersion}"
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // Core layer - contains business domain code only
    implementation project(':core');

    // Spring - abstraction level
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.springframework.boot:spring-boot-starter-log4j2"
    implementation 'org.springframework.cloud:spring-cloud-stream'

    // DB
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation "com.github.jasync-sql:jasync-mysql:${jasyncVersion}"
    runtimeOnly("com.github.jasync-sql:jasync-r2dbc-mysql:${jasyncVersion}")
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Messaging
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.apache.kafka:kafka-streams'


    // Lombok - great lib for removing boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Swagger3 / OpenAPI
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springDocVersion}"

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"
    testImplementation "org.testcontainers:r2dbc:${testContainersVersion}"
    testImplementation "org.testcontainers:mysql:${testContainersVersion}"
    testImplementation "org.testcontainers:kafka:${testContainersVersion}"

    // Others
    implementation "com.google.guava:guava:${guavaVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

tasks.named('test') {
    useJUnitPlatform()
}
